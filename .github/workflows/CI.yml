name: CI

on:
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        configuration: [debug, release, dist]

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        submodules: true

    - name: Install premake5
      uses: abel0b/setup-premake@v2.4
      with:
        version: "5.0.0-beta7"

    - name: Build and Test
      run: |
        premake5 gmake
        make config=${{ matrix.configuration }}
        ./bin/${{ matrix.configuration }}/cJSONLoggerTests/cJSONLoggerTests

    - name: Evaluate Test Results
      run: |
        NumOfFailedTests=$(jq '.Summary.Failed' test_report.json)
        if [ "$NumOfFailedTests" -eq 0 ]; then
          echo "All tests passed"
        else
          echo "Not all tests passed"
          exit 1
        fi

    - name: Install Valgrind and parser
      run: |
        sudo apt-get install -y valgrind
        pip install ValgrindCI

    - name: Valgrind Report
      run: |
        valgrind --tool=memcheck --leak-check=full --show-leak-kinds=all --suppressions=valgrind.supp --xml=yes --xml-file=valgrind_report_MTT.xml ./bin/${{ matrix.configuration }}/cJSONLoggerMultiThreadTests/cJSONLoggerMultiThreadTests
        valgrind --tool=memcheck --leak-check=full --show-leak-kinds=all --suppressions=valgrind.supp --xml=yes --xml-file=valgrind_report_T_%p.xml ./bin/${{ matrix.configuration }}/cJSONLoggerTests/cJSONLoggerTests

        found_error=0
        for file in valgrind_report_*.xml; do
            [ -e "$file" ] || continue

            echo "Processing $file..."
            
            valgrind-ci "$file" --abort-on-error

            status=$?

            if [ $status -ne 0 ]; then
                echo "Errors were found in $file"
                cat "$file"
                found_error=1
            fi

            rm "$file"
        done

        if [ $found_error -ne 0 ]; then
            exit 1
        fi

    - name: Helgrind Report
      run: |
        valgrind --tool=helgrind --suppressions=helgrind.supp --xml=yes --xml-file=helgrind_report.xml ./bin/${{ matrix.configuration }}/cJSONLoggerMultiThreadTests/cJSONLoggerMultiThreadTests
        valgrind-ci "helgrind_report.xml" --abort-on-error
        status=$?
        if [ $status -ne 0 ]; then
            echo "Errors were found in helgrind_report.xml"
            cat helgrind_report.xml
            exit 1
        fi